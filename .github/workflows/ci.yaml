name: 'CI'

on:
  pull_request: ~
  push:
    branches:
      - 'master'

jobs:
  tests:
    runs-on: 'ubuntu-latest'

    strategy:
      matrix:
        php-version:
          - '7.3'
          - '7.4'

    services:
      mysql:
        image: 'mysql:5.7'
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: 'password'
          MYSQL_DATABASE: 'test'
        ports:
          - 3306
        options: '--health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v2'

      - name: 'Install PHP'
        uses: 'shivammathur/setup-php@v2'
        with:
          php-version: '${{ matrix.php-version }}'
          coverage: 'none'
          extensions: 'mbstring, mysql'
          tools: 'composer:v2'

      - name: 'Get composer cache directory'
        id: 'composercache'
        run: 'echo "::set-output name=dir::$(composer config cache-files-dir)"'

      - name: 'Cache dependencies'
        uses: 'actions/cache@v2'
        with:
          path: '${{ steps.composercache.outputs.dir }}'
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: '${{ runner.os }}-composer-'

      - name: 'Install dependencies'
        run: 'composer install --prefer-dist'

      - name: 'Run PHP CodeSniffer'
        run: 'vendor/bin/phpcs'

      - name: 'Run PHP Mess Detector'
        run: 'vendor/bin/phpmd bin,src,tests xml phpmd.xml.dist'

      - name: 'Run PHPStan'
        run: 'vendor/bin/phpstan analyse'

      - name: 'Run PHPUnit'
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
        run: 'vendor/bin/phpunit'
